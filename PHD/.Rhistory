select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(., direction = "downup")
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.)
View(data)
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1)
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
mutate(race_merge = raw.merge(., "RACE"))
raw.merge <- function(df, filter){
df %>% select(contains(filter())) %>%
unite(., merge, paste(colnames(.)))
}
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
mutate(race_merge = raw.merge(., "RACE"))
race_unite <- raw.merge(data, "RACE")
sex_unit <- raw.merge(data, "SEX")
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1)
race_unite <- raw.merge(data, "RACE")
raw.merge <- function(df, filter){
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.)))
}
race_unite <- raw.merge(data, "RACE")
View(race_unite)
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE")
sex_unit <- raw.merge(data, "SEX")
View(sex_unit)
cbind(data$ID, race_unite, sex_unite)
sex_unite <- raw.merge(data, "SEX")
cbind(data$ID, race_unite, sex_unite)
main_merge <- cbind(data$ID, race_unite, sex_unite)
View(main_merge)
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
class()
filter = "RACE"
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
class()
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
gsub("9" | "NA", "")
raw.merge <- function(df, filter){
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
gsub("9" | "NA", "")
}
race_unite <- raw.merge(data, "RACE")
raw.merge <- function(df, filter){
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
gsub(pattern = c("9", "NA"), "")
}
race_unite <- raw.merge(data, "RACE")
raw.merge <- function(df, filter){
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
gsub(pattern = c("9", "NA"), c("", ""))
}
race_unite <- raw.merge(data, "RACE")
sex_unite <- raw.merge(data, "SEX")
View(main_merge)
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
gsub(pattern = c("9", "NA"), c("", ""))
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
gsub("9", "")
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
class()
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.vector()
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.vector() %>%
gsub("9", "")
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame()
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame()
View(succ)
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = gsub(merge, "9", ""))
View(succ)
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.vector() %>%
str_replace_all(., "9", "")
View(data)
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = str_replace_all(merge, "9", ""))
View(succ)
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = str_replace_all(merge, c("9", "NA"), ""))
View(succ)
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = str_replace_all(merge, c("9", "NA"), c("", "")))
View(succ)
View(succ)
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = str_replace_all(merge,
pattern = c("9", "NA", "_"),
replacement = c("", "", "")))
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = stri_replace_all(merge,
pattern = c("9", "NA", "_"),
replacement = c("", "", "")))
succ <- data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
View(succ)
most.repeated <- function(x){
tab <- table(str_split(x, "")[[1]])
names(tab)[tab == max(tab)]
}
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE")
raw.merge <- function(df, filter){
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE")
sex_unite <- raw.merge(data, "SEX")
main_merge <- cbind(data$ID, race_unite, sex_unite) %>%
mutate(RACE_FIN = most.repeated(race_unite),
SEX_FIN = most.repeated(sex_unite))
View(data)
View(sex_unite)
raw.merge <- function(df, filter){
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(paste0("merge_", filter) = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE")
View(race_unite)
raw.merge <- function(df, filter){
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(paste0("merge_", filter) = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
raw.merge <- function(df, filter){
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(paste0("merge_", filter) = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
race_unite <- raw.merge(data, "RACE") %>%
rename(merge_race = merge)
sex_unite <- raw.merge(data, "SEX") %>%
rename(merge_sex = merge)
race_unite <- raw.merge(data, "RACE") %>%
rename(merge_race = merge)
sex_unite <- raw.merge(data, "SEX") %>%
rename(merge_sex = merge)
main_merge <- cbind(data$ID, race_unite, sex_unite) %>%
mutate(RACE_FIN = most.repeated(race_unite),
SEX_FIN = most.repeated(sex_unite))
View(main_merge)
most.repeated <- function(x){
names(which.max(table(scan(text = x, what = ''))))
}
main_merge <- cbind(data$ID, race_unite, sex_unite) %>%
mutate(RACE_FIN = most.repeated(race_unite),
SEX_FIN = most.repeated(sex_unite))
main_merge <- cbind(data$ID, race_unite, sex_unite) %>%
rowwise() %>%
mutate(RACE_FIN = most.repeated(race_unite),
SEX_FIN = most.repeated(sex_unite))
most.repeated <- function("999990131651"){
names(which.max(table(scan(text = x, what = ''))))
}
most.repeated("999990131651")
most.repeated <- function(x){
tab <- table(str_split(x, "")[[1]])
names(tab)[tab == max(tab)]
}
most.repeated("999990131651")
main_merge <- cbind(data$ID, race_unite, sex_unite) %>%
mutate(RACE_FIN = most.repeated(race_unite),
SEX_FIN = most.repeated(sex_unite))
traceback()
main_merge <- cbind(data$ID, race_unite, sex_unite) %>%
rowwise() %>%
mutate(RACE_FIN = most.repeated(race_unite),
SEX_FIN = most.repeated(sex_unite))
View(main_merge)
race_unite <- raw.merge(data, "RACE") %>%
most.repeated()
race_unite <- raw.merge(data, "RACE") %>%
most.repeated(.$merge)
race_unite <- raw.merge(data, "RACE") %>%
most.repeated() %>% as.vector()
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE") %>%
most.repeated() %>% as.vector()
race_unite <- raw.merge(data, "RACE") %>%
as.vector() %>%
most.repeated()
race_unite <- raw.merge(data, "RACE") %>%
as.atomic.vector() %>%
most.repeated()
race_unite <- raw.merge(data, "RACE") %>%
?as.vector
?as.vector
race_unite <- raw.merge(data, "RACE") %>%
as.list() %>%
lapply(., most.repeated)
View(race_unite)
most.repeated <- function(x){
tab <- table(str_split(x, ""))
names(tab)[tab == max(tab)]
}
race_unite <- raw.merge(data, "RACE") %>%
as.list() %>%
lapply(., most.repeated)
race_unite <- raw.merge(data, "RACE") %>%
lapply(., mode)
View(race_unite)
race_unite[["merge"]]
race_unite <- raw.merge(data, "RACE") %>%
as.data.frame() %>%
mutate(merge = mode(merge))
View(race_unite)
race_unite <- raw.merge(data, "RACE") %>%
as.data.frame() %>%
mutate(merge = most.repeated(merge))
most.repeated <- function(x){
tab <- table(str_split(x, ""))
n <- names(tab)[tab == max(tab)]
return(n)
}
race_unite <- raw.merge(data, "RACE") %>%
as.data.frame() %>%
mutate(merge = most.repeated(merge))
race_unite <- raw.merge(data, "RACE") %>%
as.list() %>%
lapply(., most.repeated)
race_unite <- raw.merge(data, "RACE") %>%
as.data.frame() %>%
rowwise() %>%
mutate(test = most.repeated(merge))
most.repeated("9999010132123")
class(most.repeated("9999010132123"))
most.repeated <- function(x){
tab <- table(str_split(x, ""))
n <- names(tab)[tab == max(tab)]
return(n)
}
race_unite <- raw.merge(data, "RACE") %>%
as.data.frame() %>%
rowwise() %>%
mutate(test = most.repeated(merge))
race_unite <- raw.merge(data, "RACE") %>%
as.data.frame() %>%
mutate(test = most.repeated(merge))
x = "99911111100101"
tab <- table(str_split(x, ""))
n <- names(tab)[tab == max(tab)]
?patterns
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(str_split(x)))))
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x)))))
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, "")))))
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("RACE_FINAL" = .)
sex_unite <- raw.merge(data, "SEX") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("SEX_FINAL" = .)
pacman::p_load(tidyverse,
data.table)
`%ni%` <- Negate(`%in%`)
raw.intake <- function(directory){
id_check <- c()
intake <- lapply(list.files(path = directory,
full.names = TRUE),
haven::read_sas) %>%
lapply(., rename_with, toupper) %>%
lapply(., rename, any_of(c(ID = "PHDID")))
for (i in 1:length(intake)) {
if("ID" %ni% colnames(intake[[i]])){
id_check <- append(id_check, i)
}
}
intake <- intake[-id_check]
}
raw.merge <- function(df, filter){
data %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
raw.clean <- function(df_list){
data <- raw.intake("DummyData/") %>%
purrr::reduce(., left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("RACE_FINAL" = .)
sex_unite <- raw.merge(data, "SEX") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("SEX_FINAL" = .)
main_merge <- cbind(data$ID, race_unite, sex_unite)
}
test <- raw.clean(raw.intake("DummyData/"))
data <- purrr::reduce("DummyData/", left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
id_check <- c()
intake <- lapply(list.files(path = "DummyData/",
full.names = TRUE),
haven::read_sas) %>%
lapply(., rename_with, toupper) %>%
lapply(., rename, any_of(c(ID = "PHDID")))
for (i in 1:length(intake)) {
if("ID" %ni% colnames(intake[[i]])){
id_check <- append(id_check, i)
}
}
for (i in 1:length(intake)) {
if("ID" %ni% colnames(intake[[i]])){
id_check <- append(id_check, i)
}
}
id_check <- c()
for (i in 1:length(intake)) {
if("ID" %ni% colnames(intake[[i]])){
id_check <- append(id_check, i)
}
}
intake <- intake[-id_check]
raw.intake <- function(directory){
id_check <- c()
intake <- lapply(list.files(path = directory,
full.names = TRUE),
haven::read_sas) %>%
lapply(., rename_with, toupper) %>%
lapply(., rename, any_of(c(ID = "PHDID")))
for (i in 1:length(intake)) {
if("ID" %ni% colnames(intake[[i]])){
id_check <- append(id_check, i)
}
}
intake <- intake[-id_check]
}
raw.merge <- function(df, filter){
df %>% select(contains(paste("RACE"))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
raw.clean <- function(df_list){
data <- purrr::reduce(df_list, left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("RACE_FINAL" = .)
sex_unite <- raw.merge(data, "SEX") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("SEX_FINAL" = .)
main_merge <- cbind(data$ID, race_unite, sex_unite)
}
test <- raw.clean(raw.intake("DummyData/"))
View(test)
raw.merge <- function(df, filter){
df %>% select(contains(paste(filter))) %>%
unite(., merge, paste(colnames(.))) %>%
as.data.frame() %>%
mutate(merge = gsub("9", "",
gsub("NA", "",
gsub("_", "", merge))))
}
raw.clean <- function(df_list){
data <- purrr::reduce(df_list, left_join, by = "ID") %>%
select(ID, contains(c("RACE", "SEX", "AGE")),
-contains(c("FATHER", "MOTHER"))) %>%
group_by(ID) %>%
fill(.) %>%
slice(1) %>%
ungroup()
race_unite <- raw.merge(data, "RACE") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("RACE_FINAL" = .)
sex_unite <- raw.merge(data, "SEX") %>%
apply(., 1, function(x) names(which.max(table(strsplit(x, ""))))) %>%
data.frame("SEX_FINAL" = .)
main_merge <- cbind(data$ID, race_unite, sex_unite)
}
test <- raw.clean(raw.intake("DummyData/"))
View(test)
SPINE <- raw.clean(raw.intake("DummyData/"))
write.csv("dummySpine.csv", SPINE)
write.csv(SPINE, "dummySpine.csv")
